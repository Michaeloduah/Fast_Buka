generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model PasswordResetTokens {
  id    Int    @id @default(autoincrement())
  email String
  token String @unique
}

model EmailVerificationTokens {
  id    Int    @id @default(autoincrement())
  token String
}

model User {
  id               Int           @id @default(autoincrement())
  name             String
  email            String        @unique
  phone            String        @unique
  email_verified   Boolean       @default(false)
  password         String
  address          String?
  image            String?
  account_type     String        @default("user")
  categories       Category[]
  cart             Cart?
  vendors          Vendor[]
  foods            Food[]
  orders           Order[]
}

model Food {
  id               Int           @id @default(autoincrement())
  userId           Int
  categoryId       Int
  name             String
  description      String
  image            String
  price            Float
  discount         Float
  processing_time  String
  ready_made       Boolean
  user             User          @relation(fields: [userId], references: [id])
  category         Category      @relation(fields: [categoryId], references: [id])
  cartItems        CartItem[]
  orderItems       OrderItem[]
}

model Category {
  id       Int      @id @default(autoincrement())
  userId   Int
  name     String
  image    String
  user     User     @relation(fields: [userId], references: [id])
  foods    Food[]
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int        @unique
  user      User       @relation(fields: [userId], references: [id])
  cartItems CartItem[]
}

model CartItem {
  id       Int     @id @default(autoincrement())
  cartId   Int
  foodId   Int
  quantity Int
  cart     Cart    @relation(fields: [cartId], references: [id])
  food     Food    @relation(fields: [foodId], references: [id])
}

model Order {
  id               Int           @id @default(autoincrement())
  userId           Int
  order_number     String
  status           String
  total_amount     Float
  shipping_address String
  payment_method   String
  payment_status   String
  user             User          @relation(fields: [userId], references: [id])
  orderItems       OrderItem[]
}

model OrderItem {
  id       Int     @id @default(autoincrement())
  orderId  Int
  foodId   Int
  price    Float
  quantity Int
  order    Order   @relation(fields: [orderId], references: [id])
  food     Food    @relation(fields: [foodId], references: [id])
}

model Vendor {
  id               Int           @id @default(autoincrement())
  userId           Int
  business_name    String
  cac_number       String
  country          String
  business_state   String
  business_city    String
  business_address String
  opening_time     String
  closing_time     String
  user             User          @relation(fields: [userId], references: [id])
}
